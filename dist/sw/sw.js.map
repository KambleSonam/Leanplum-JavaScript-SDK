{"version":3,"sources":["../../src/PushServiceWorker.js"],"names":["ACTION_NAME_KEY","OPEN_URL_ACTION","ARG_URL","openActions","self","addEventListener","event","jsonString","data","text","console","log","options","JSON","parse","title","tag","openAction","hasOwnProperty","waitUntil","registration","showNotification","notification","close","notificationId","openActionUrl","clients","openWindow"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBA,MAAMA,kBAAkB,UAAxB;AACA,MAAMC,kBAAkB,UAAxB;AACA,MAAMC,UAAU,KAAhB;;AAEA,MAAIC,cAAc,EAAlB;;AAEAC,OAAKC,gBAAL,CAAsB,MAAtB,EAA8B,UAAUC,KAAV,EAAiB;AAC7C,QAAIC,aAAaD,MAAME,IAAN,IAAcF,MAAME,IAAN,CAAWC,IAAX,EAAd,GAAkCH,MAAME,IAAN,CAAWC,IAAX,EAAlC,GAAsD,IAAvE;;AAEA,QAAI,CAACF,UAAL,EAAiB;AACfG,cAAQC,GAAR,CAAY,4DAAZ;AACA;AACD;;AAED,QAAIC,UAAUC,KAAKC,KAAL,CAAWP,UAAX,CAAd;AACA,QAAI,CAACK,OAAD,IAAY,CAACA,QAAQG,KAArB,IAA8B,CAACH,QAAQI,GAA3C,EAAgD;AAC9CN,cAAQC,GAAR,CAAY,8DACR,UADJ;AAEA;AACD;;AAED;AACA,QAAIC,QAAQJ,IAAR,IAAgBI,QAAQJ,IAAR,CAAaS,UAA7B,IACAL,QAAQJ,IAAR,CAAaS,UAAb,CAAwBC,cAAxB,CAAuClB,eAAvC,CADA,IAEAY,QAAQJ,IAAR,CAAaS,UAAb,CAAwBjB,eAAxB,MAA6CC,eAF7C,IAGAW,QAAQJ,IAAR,CAAaS,UAAb,CAAwBC,cAAxB,CAAuChB,OAAvC,CAHJ,EAGqD;AACnDC,kBAAYS,QAAQI,GAApB,IAA2BJ,QAAQJ,IAAR,CAAaS,UAAb,CAAwBf,OAAxB,CAA3B;AACD;;AAED;AACA,QAAIa,QAAQH,QAAQG,KAApB;AACA,WAAOH,QAAQG,KAAf;;AAEAT,UAAMa,SAAN,CAAgBf,KAAKgB,YAAL,CAAkBC,gBAAlB,CAAmCN,KAAnC,EAA0CH,OAA1C,CAAhB;AACD,GA5BD;;AA8BAR,OAAKC,gBAAL,CAAsB,mBAAtB,EAA2C,UAAUC,KAAV,EAAiB;AAC1DI,YAAQC,GAAR,CAAY,yDAAZ;;AAEAL,UAAMgB,YAAN,CAAmBC,KAAnB;;AAEA,QAAI,CAACjB,MAAMgB,YAAP,IAAuB,CAAChB,MAAMgB,YAAN,CAAmBN,GAA/C,EAAoD;AAClDN,cAAQC,GAAR,CAAY,iEACR,SADJ;AAEA;AACD;;AAED,QAAIa,iBAAiBlB,MAAMgB,YAAN,CAAmBN,GAAxC;AACA,QAAIS,gBAAgBtB,YAAYqB,cAAZ,CAApB;AACA,QAAI,CAACC,aAAL,EAAoB;AAClBf,cAAQC,GAAR,CAAY,8DAAZ;AACA;AACD;;AAED,WAAOR,YAAYqB,cAAnB;;AAEAlB,UAAMa,SAAN,CAAgBO,QAAQC,UAAR,CAAmBF,aAAnB,CAAhB;AACD,GArBD","file":"sw.js","sourcesContent":["/*\n *\n *  Push Notifications codelab\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\nconst ACTION_NAME_KEY = '__name__';\nconst OPEN_URL_ACTION = 'Open URL';\nconst ARG_URL = 'URL';\n\nlet openActions = {};\n\nself.addEventListener('push', function (event) {\n  let jsonString = event.data && event.data.text() ? event.data.text() : null;\n\n  if (!jsonString) {\n    console.log('Leanplum: Push received without payload, skipping display.');\n    return;\n  }\n\n  let options = JSON.parse(jsonString);\n  if (!options || !options.title || !options.tag) {\n    console.log('Leanplum: No options, title or tag/id received, skipping ' +\n        'display.');\n    return;\n  }\n\n  // Extract open action url. We only support open url action for now.\n  if (options.data && options.data.openAction &&\n      options.data.openAction.hasOwnProperty(ACTION_NAME_KEY) &&\n      options.data.openAction[ACTION_NAME_KEY] === OPEN_URL_ACTION &&\n      options.data.openAction.hasOwnProperty(ARG_URL)) {\n    openActions[options.tag] = options.data.openAction[ARG_URL];\n  }\n\n  // Extract title and delete from options.\n  let title = options.title;\n  delete options.title;\n\n  event.waitUntil(self.registration.showNotification(title, options));\n});\n\nself.addEventListener('notificationclick', function (event) {\n  console.log('Leanplum: [Service Worker] Notification click received.');\n\n  event.notification.close();\n\n  if (!event.notification || !event.notification.tag) {\n    console.log('Leanplum: No notification or tag/id received, skipping open ' +\n        'action.');\n    return;\n  }\n\n  let notificationId = event.notification.tag;\n  let openActionUrl = openActions[notificationId];\n  if (!openActionUrl) {\n    console.log('Leanplum: [Service Worker] No action defined, doing nothing.');\n    return;\n  }\n\n  delete openActions.notificationId;\n\n  event.waitUntil(clients.openWindow(openActionUrl));\n});\n"]}